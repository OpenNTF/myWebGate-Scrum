<?xml version="1.0" encoding="UTF-8"?>
<faces-config>
  <faces-config-extension>
    <namespace-uri>http://www.ibm.com/xsp/custom</namespace-uri>
    <default-prefix>xc</default-prefix>
  </faces-config-extension>
  <composite-component>
    <component-type>ccNamePicker_old</component-type>
    <composite-name>ccNamePicker_old</composite-name>
    <composite-file>/ccNamePicker_old.xsp</composite-file>
    <composite-extension>
      <designer-extension>
        <in-palette>true</in-palette>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
ccNamePicker&#xd;
&lt;/xp:view&gt;</render-markup>
      </designer-extension>
    </composite-extension>
    <property>
      <property-name>pickerFieldName</property-name>
      <property-class>string</property-class>
      <description>FieldName of the Object - Used for the Setter &amp; Getters&#xd;
&#xd;
get&lt;textArrayFieldName&gt;()&#xd;
set&lt;textArrayFieldName&gt;()</description>
    </property>
    <property>
      <property-name>pickerObject</property-name>
      <property-class>java.lang.Object</property-class>
      <description>the Java Object where the field should refer to</description>
    </property>
    <property>
      <property-name>pickerObjectAlias</property-name>
      <property-class>string</property-class>
      <description>Alias for the Object.&#xd;
This is also needed in the updateMulitValueData (to ensure that only the object is updated where the field refers to if there are multiple instances of the Class)</description>
    </property>
    <property>
      <property-name>dirServer</property-name>
      <property-class>string</property-class>
      <description>Server of the Directory (empty means on the same server)</description>
    </property>
    <property>
      <property-name>dirPath</property-name>
      <property-class>string</property-class>
      <description>Path and Name of the directory</description>
    </property>
    <property>
      <property-name>dirView</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <visible/>
        </designer-extension>
        <collection-property>false</collection-property>
      </property-extension>
      <description>View of the Directory. If dirFTSearch isAvailable and dirIsLookup is set to false this view is used for the search.</description>
    </property>
    <property>
      <property-name>dirFTSearch</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <visible>!dirIsLookup</visible>
        </designer-extension>
      </property-extension>
      <description>The Directory needs to be indexed to use this Parameter.</description>
    </property>
    <property>
      <property-name>dirReturnField</property-name>
      <property-class>string</property-class>
      <description>Field or Formula which is Returned for the TypeAHead and Fieldvalue</description>
    </property>
    <property>
      <property-name>dirIsLookup</property-name>
      <property-class>boolean</property-class>
      <property-extension>
        <designer-extension>
          <default-value>true</default-value>
        </designer-extension>
      </property-extension>
      <description>If IsLookup is set to True the lookup works with getDocumentsByKey &#xd;
If you want to add a FTSearch select False</description>
    </property>
    <property>
      <property-name>dirInputString</property-name>
      <property-class>string</property-class>
      <description>use the value of this property in the FTSearch to replace it with the input of the user</description>
      <property-extension>
        <designer-extension>
          <visible>!dirIsLookup</visible>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>dirReturnFields</property-name>
      <property-class>java.util.Collection</property-class>
      <property-extension>
        <property-item-class>string</property-item-class>
        <collection-property>true</collection-property>
      </property-extension>
      <description>Fields which are displayed in the search view</description>
    </property>
    <property>
      <property-name>dirMultiValue</property-name>
      <property-class>boolean</property-class>
      <display-name>dirMultiValue</display-name>
      <property-extension>
        <designer-extension>
          <default-value>true</default-value>
        </designer-extension>
      </property-extension>
      <description>True if multi values are allowed</description>
    </property>
    <property>
      <property-name>dirReturnFieldFormula</property-name>
      <property-class>boolean</property-class>
      <property-extension>
        <designer-extension>
          <default-value>false</default-value>
        </designer-extension>
      </property-extension>
      <description>If the dirReturnField is a Formula select true.</description>
    </property>
    <property>
      <property-name>dirFTSearchAll</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <visible>!dirIsLookup</visible>
        </designer-extension>
      </property-extension>
      <description>This Search Query will be used for the search Overview</description>
    </property>
    <property>
      <property-name>pickerId</property-name>
      <property-class>string</property-class>
      <description>Please enter an unique Id</description>
    </property>
    <property>
      <property-name>dirReadOnly</property-name>
      <property-class>boolean</property-class>
      <property-extension>
        <designer-extension>
          <default-value>false</default-value>
        </designer-extension>
      </property-extension>
      <description/>
    </property>
    <property>
      <property-name>dirRefreshId</property-name>
      <property-class>string</property-class>
      <description>The element with this ID will be refreshed after the value of the cc has changed&#xd;
&#xd;
(Use viewScope "changedValue&lt;pikcerId&gt;" to check if the value has changed and&#xd;
"textArrayValue&lt;pikcerId&gt;" to get the values (String/Array/Vector))</description>
      <property-extension>
        <required>true</required>
      </property-extension>
    </property>
    <property>
      <property-name>mvSeparator</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <default-value>,</default-value>
        </designer-extension>
      </property-extension>
      <description>This defines the separator of multi values</description>
    </property>
    <property>
      <property-name>dirFTSearchFieldInView</property-name>
      <property-class>string</property-class>
      <description>This Field will be used for the Search over the View if dirReturnFieldFormula is set to true</description>
    </property>
  </composite-component>
</faces-config>
